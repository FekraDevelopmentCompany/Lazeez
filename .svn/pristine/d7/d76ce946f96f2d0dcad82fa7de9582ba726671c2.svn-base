@model Pranzo.Model.ViewModel.RestaurantMealModel
@using Pranzo.Resource.ControlPanel

@using (Ajax.BeginForm("Save", "RestaurantMeal", new { area = "ControlPanel" },
                                                                                                                                                                                            new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnFailure = "OnFailure" },
                                                                                                                                                                                            new { defaultbutton = "btn_Save", @class = "form-horizontal" }))
{
    @Html.HiddenFor(model => model.RestaurantMealVM.ID)
    @Html.HiddenFor(model => model.RestaurantMealVM.RestaurantID)
    @Html.HiddenFor(model => model.RestaurantMealVM.IsDeleted)

    <h2>@Model.Header</h2>
    <h4>@RestaurantMeal.RestaurantMeals</h4>
    <hr />
    <div class="row">
        <div class="col-lg-12">
            <div>

                <div class="form-group">
                    <label class="col-md-2 control-label">@RestaurantMeal.RestaurantName</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RestaurantName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-2 control-label">@RestaurantMeal.Name<span class="required"> *</span></label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RestaurantMealVM.Name, new { htmlAttributes = new { @class = "form-control", @palceholder = @RestaurantMeal.Name } })
                        @Html.ValidationMessageFor(model => model.RestaurantMealVM.Name)
                    </div>
                </div>


                <div class="form-group">
                    <label class="col-md-2 control-label">@RestaurantMeal.Cost<span class="required"> *</span></label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.RestaurantMealVM.Cost, new { htmlAttributes = new { @class = "form-control", @palceholder = @RestaurantMeal.Cost } })
                        @Html.ValidationMessageFor(model => model.RestaurantMealVM.Cost)
                    </div>
                    <label class="col-md-2 control-label">@RestaurantMeal.Calories</label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.RestaurantMealVM.Calories, new { htmlAttributes = new { @class = "form-control", @palceholder = @RestaurantMeal.Calories } })
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-2 control-label">@RestaurantMeal.NumberOfPersons<span class="required"> *</span></label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.RestaurantMealVM.NumberOfPersons, new { htmlAttributes = new { @class = "form-control", @palceholder = @RestaurantMeal.NumberOfPersons } })
                        @Html.ValidationMessageFor(model => model.RestaurantMealVM.NumberOfPersons)
                    </div>
                    <label class="col-md-2 control-label">@RestaurantMeal.Temperature<span class="required"> *</span></label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.RestaurantMealVM.Temperature, new { htmlAttributes = new { @class = "form-control", @palceholder = @RestaurantMeal.Temperature } })
                        @Html.ValidationMessageFor(model => model.RestaurantMealVM.Temperature)
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-2 control-label">@RestaurantMeal.TimeOfMeal<span class="required"> *</span></label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RestaurantMealVM.TimeOfMeal, new { htmlAttributes = new { @class = "form-control", @palceholder = @RestaurantMeal.TimeOfMeal } })
                        @Html.ValidationMessageFor(model => model.RestaurantMealVM.TimeOfMeal)
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-2 control-label">@RestaurantMeal.Contents<span class="required"> *</span></label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RestaurantMealVM.Contents, new { htmlAttributes = new { @class = "form-control", @palceholder = @RestaurantMeal.Contents } })
                        @Html.ValidationMessageFor(model => model.RestaurantMealVM.Contents)
                    </div>
                </div>

            </div>
            <hr />
            <div class="col-lg-12">
                <a role="button" id="btn_AddException" class="btn btn-success"><i class="fa fa-plus"></i> add New Exception </a>
                <select multiple="multiple" class="dualListbox" name="dualListbox">

                    @if (Model.ListMealException.Count() > 0)
                    {
                        foreach (var item in Model.ListMealException)
                        {
                            <option selected="selected" value="@item.Value">@item.Text</option>
                        }
                    }

                    @if (Model.ListNotMealException.Count() > 0)
                    {
                        foreach (var item in Model.ListNotMealException)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    }

                </select>
            </div>
            <div>

                <hr />
                @Html.Partial("Buttons/_Save")
                @Html.Partial("Buttons/_CancelAddEdit")
            </div>
        </div>
    </div>
}
@section Scripts{

    <script>
        $(document).ready(function () {
             $('.dualListbox').bootstrapDualListbox({
                nonSelectedListLabel: 'Non-selected',
                selectedListLabel: 'Selected',
                preserveSelectionOnMove: 'moved',
                moveOnSelect: false,
                nonSelectedFilter: ''
            });
        });

        // delete grid icon
        $(document).on("click", "#btn_AddException", function () {
            $.ajax({
                url: '@Url.Action("AddNewMealException", "RestaurantMeal")',
                type: "GET",
                success: function (data) {
                    openPopupDialog(data);
                }
            });
        });

        function RefreshDualListbox() {
            $('.dualListbox').bootstrapDualListbox('refresh')
        }

    </script>
}